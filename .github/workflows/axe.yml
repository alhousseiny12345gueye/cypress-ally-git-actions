# Name of the workflow
name: axe

# Events that trigger the workflow
on: 
#  push:
 #   branches: [main, github-actions-cypress-tests ]
  pull_request:
#    branches: [main]

# The jobs of the workflow   
jobs:
  axe:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      # Sets up Node.js environment for use in actions
      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      # Install the project dependencies
      - run: npm install
      # Build the project if a build script is present
      - name: Build
        env:
          ESLINT_NO_DEV_ERRORS: 'true'
        run: npm run build --if-present
      # Run the Axe accessibility tests
      - name: Check server and run axe
        run: |
          # Create a directory for the reports
          echo 'Creating reports directory'
          mkdir -p public/a11y_reports
          # Install testing tools
          echo 'Installing packages'
          npm install -g @axe-core/cli
          npm install axe-html-reporter
          # Start the server if it isn't running
          if ! curl -s http://localhost:3000 > /dev/null; then
            echo 'Starting server'
            npm start &
            npx wait-on http://localhost:3000
          fi
          # Run the Axe tests and save the log
          echo 'Running axe'
          axe http://localhost:3000 --dir public/a11y_reports --save axe_a11y_report.json > axe.log
          # Stop the server
          echo 'Stopping server'
          pkill -f "react-scripts start"
          # Generate the HTML report
          echo 'Running create-report.js script'
          node create-report.js
      # Wait for the file to be fully written before proceeding
      - name: Wait for the file to be fully written
        run: sleep 10
      # Archive the accessibility report as an artifact
      - name: Archive axe accessibility report as an artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: axe accessibility report 
          path: public/a11y_reports/axe_a11y_report.html
      # Fail the job if any accessibility issues were found
      - name: Fail if accessibility issues were found
        run: grep -q "0 violations found" axe.log || exit 1